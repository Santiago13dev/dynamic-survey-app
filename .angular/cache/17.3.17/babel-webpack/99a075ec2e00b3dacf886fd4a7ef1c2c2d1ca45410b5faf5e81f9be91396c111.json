{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\n/**\n * A very simple authentication service that stores a logged‑in user in memory.\n * In a real application you would integrate with a backend API and exchange a JWT.\n */\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor() {\n      const stored = localStorage.getItem('currentUser');\n      this.currentUserSubject = new BehaviorSubject(stored);\n      this.currentUser$ = this.currentUserSubject.asObservable();\n    }\n    /**\n     * Attempt to log in with the provided credentials. For demonstration\n     * purposes this simply checks for a hard‑coded username/password pair.\n     * @param username The user name\n     * @param password The password\n     * @returns true if the login succeeded\n     */\n    login(username, password) {\n      // In a real app you'd call your backend API here. We accept any non‑empty\n      // credentials and store the username as the logged‑in user.\n      if (username && password) {\n        // Persist to localStorage so the session is remembered across reloads\n        localStorage.setItem('currentUser', username);\n        this.currentUserSubject.next(username);\n        return true;\n      }\n      return false;\n    }\n    /**\n     * Log out the current user and clear the session.\n     */\n    logout() {\n      localStorage.removeItem('currentUser');\n      this.currentUserSubject.next(null);\n    }\n    /**\n     * Return the current user synchronously.\n     */\n    get currentUser() {\n      return this.currentUserSubject.value;\n    }\n    /**\n     * Whether a user is currently authenticated.\n     */\n    get isLoggedIn() {\n      return !!this.currentUserSubject.value;\n    }\n    static {\n      this.ɵfac = function AuthService_Factory(t) {\n        return new (t || AuthService)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AuthService,\n        factory: AuthService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}