{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/card\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(fb, authService, router, snackBar) {\n      this.fb = fb;\n      this.authService = authService;\n      this.router = router;\n      this.snackBar = snackBar;\n    }\n    ngOnInit() {\n      this.loginForm = this.fb.group({\n        username: ['', Validators.required],\n        password: ['', Validators.required]\n      });\n    }\n    /**\n     * Handle submission of the login form. Uses the AuthService to authenticate\n     * the user. On success, navigate to the survey list page. On failure, show\n     * an error message.\n     */\n    onSubmit() {\n      if (this.loginForm.invalid) {\n        return;\n      }\n      const {\n        username,\n        password\n      } = this.loginForm.value;\n      const success = this.authService.login(username, password);\n      if (success) {\n        this.router.navigate(['/surveys']);\n      } else {\n        this.snackBar.open('Credenciales inválidas', 'Cerrar', {\n          duration: 3000\n        });\n      }\n    }\n    static {\n      this.ɵfac = function LoginComponent_Factory(t) {\n        return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.MatSnackBar));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: LoginComponent,\n        selectors: [[\"app-login\"]],\n        decls: 14,\n        vars: 1,\n        consts: [[1, \"login-card\"], [3, \"ngSubmit\", \"formGroup\"], [\"appearance\", \"outline\", 1, \"full-width\"], [\"matInput\", \"\", \"formControlName\", \"username\", \"required\", \"\"], [\"matInput\", \"\", \"type\", \"password\", \"formControlName\", \"password\", \"required\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"full-width\"]],\n        template: function LoginComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"mat-card\", 0)(1, \"h1\");\n            i0.ɵɵtext(2, \"Iniciar sesi\\u00F3n\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"form\", 1);\n            i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(4, \"mat-form-field\", 2)(5, \"mat-label\");\n            i0.ɵɵtext(6, \"Usuario\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(7, \"input\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"mat-form-field\", 2)(9, \"mat-label\");\n            i0.ɵɵtext(10, \"Contrase\\u00F1a\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(11, \"input\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(12, \"button\", 5);\n            i0.ɵɵtext(13, \" Entrar \");\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          }\n        },\n        dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i5.MatButton, i6.MatInput, i7.MatFormField, i7.MatLabel, i8.MatCard],\n        styles: [\".login-card[_ngcontent-%COMP%]{max-width:400px;margin:2rem auto;padding:1rem}mat-form-field[_ngcontent-%COMP%]{margin-bottom:1rem}\"]\n      });\n    }\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}