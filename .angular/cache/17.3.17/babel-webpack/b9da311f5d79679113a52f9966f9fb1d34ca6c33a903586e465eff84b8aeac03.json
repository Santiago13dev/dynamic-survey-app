{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/survey.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/card\";\nimport * as i10 from \"@angular/material/radio\";\nfunction SurveyTakeComponent_mat_card_0_div_6_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-form-field\", 9);\n    i0.ɵɵelement(2, \"input\", 10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const question_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formControlName\", question_r3.id);\n  }\n}\nfunction SurveyTakeComponent_mat_card_0_div_6_div_6_mat_radio_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-radio-button\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r4);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", option_r4, \" \");\n  }\n}\nfunction SurveyTakeComponent_mat_card_0_div_6_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-radio-group\", 11);\n    i0.ɵɵtemplate(2, SurveyTakeComponent_mat_card_0_div_6_div_6_mat_radio_button_2_Template, 2, 2, \"mat-radio-button\", 12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const question_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"formControlName\", question_r3.id);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", question_r3.options);\n  }\n}\nfunction SurveyTakeComponent_mat_card_0_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-card\", 6)(2, \"h3\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 7);\n    i0.ɵɵtemplate(5, SurveyTakeComponent_mat_card_0_div_6_div_5_Template, 3, 1, \"div\", 8)(6, SurveyTakeComponent_mat_card_0_div_6_div_6_Template, 3, 2, \"div\", 8);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const question_r3 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(question_r3.text);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngSwitch\", question_r3.type);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngSwitchCase\", \"text\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngSwitchCase\", \"radio\");\n  }\n}\nfunction SurveyTakeComponent_mat_card_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-card\", 1)(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"form\", 2);\n    i0.ɵɵlistener(\"ngSubmit\", function SurveyTakeComponent_mat_card_0_Template_form_ngSubmit_5_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onSubmit());\n    });\n    i0.ɵɵtemplate(6, SurveyTakeComponent_mat_card_0_div_6_Template, 7, 4, \"div\", 3);\n    i0.ɵɵelementStart(7, \"div\", 4)(8, \"button\", 5);\n    i0.ɵɵtext(9, \"Enviar respuestas\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.survey.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.survey.description);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.answerForm);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.survey.questions);\n  }\n}\nexport let SurveyTakeComponent = /*#__PURE__*/(() => {\n  class SurveyTakeComponent {\n    constructor(route, surveyService, fb, router, snackBar) {\n      this.route = route;\n      this.surveyService = surveyService;\n      this.fb = fb;\n      this.router = router;\n      this.snackBar = snackBar;\n    }\n    ngOnInit() {\n      const idParam = this.route.snapshot.paramMap.get('id');\n      const surveyId = idParam ? +idParam : null;\n      if (!surveyId) {\n        this.router.navigate(['/surveys']);\n        return;\n      }\n      const survey = this.surveyService.getSurvey(surveyId);\n      if (!survey) {\n        this.router.navigate(['/surveys']);\n        return;\n      }\n      this.survey = survey;\n      this.answerForm = this.fb.group({});\n      survey.questions.forEach(q => {\n        if (q.type === 'radio') {\n          this.answerForm.addControl(String(q.id), this.fb.control('', Validators.required));\n        } else {\n          // text question\n          this.answerForm.addControl(String(q.id), this.fb.control('', Validators.required));\n        }\n      });\n    }\n    /**\n     * Submit handler. Transform form values into a SurveyResponse and persist it.\n     */\n    onSubmit() {\n      if (!this.survey || this.answerForm.invalid) {\n        this.answerForm.markAllAsTouched();\n        return;\n      }\n      const answers = Object.keys(this.answerForm.value).map(key => ({\n        questionId: +key,\n        answer: this.answerForm.value[key]\n      }));\n      this.surveyService.addResponse({\n        surveyId: this.survey.id,\n        answers\n      });\n      this.snackBar.open('Encuesta respondida. ¡Gracias!', 'Cerrar', {\n        duration: 3000\n      });\n      this.router.navigate(['/surveys']);\n    }\n    static {\n      this.ɵfac = function SurveyTakeComponent_Factory(t) {\n        return new (t || SurveyTakeComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.SurveyService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i4.MatSnackBar));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: SurveyTakeComponent,\n        selectors: [[\"app-survey-take\"]],\n        decls: 1,\n        vars: 1,\n        consts: [[\"class\", \"survey-card\", 4, \"ngIf\"], [1, \"survey-card\"], [3, \"ngSubmit\", \"formGroup\"], [4, \"ngFor\", \"ngForOf\"], [1, \"actions\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"], [1, \"question-card\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"appearance\", \"outline\", 1, \"full-width\"], [\"matInput\", \"\", \"required\", \"\", 3, \"formControlName\"], [3, \"formControlName\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n        template: function SurveyTakeComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵtemplate(0, SurveyTakeComponent_mat_card_0_Template, 10, 4, \"mat-card\", 0);\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", ctx.survey);\n          }\n        },\n        dependencies: [i5.NgForOf, i5.NgIf, i5.NgSwitch, i5.NgSwitchCase, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName, i6.MatButton, i7.MatInput, i8.MatFormField, i9.MatCard, i10.MatRadioGroup, i10.MatRadioButton],\n        styles: [\".survey-card[_ngcontent-%COMP%]{margin:1rem auto;max-width:800px;padding:1rem}.question-card[_ngcontent-%COMP%]{margin-bottom:1rem;padding:1rem;border-left:4px solid #3f51b5}.actions[_ngcontent-%COMP%]{margin-top:1rem}mat-radio-button[_ngcontent-%COMP%]{display:block;margin:.25rem 0}\"]\n      });\n    }\n  }\n  return SurveyTakeComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}