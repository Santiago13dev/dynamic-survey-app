{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/survey.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/card\";\nimport * as i10 from \"@angular/material/icon\";\nimport * as i11 from \"@angular/material/select\";\nimport * as i12 from \"@angular/material/core\";\nfunction SurveyCreateComponent_div_13_div_20_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 21)(1, \"mat-form-field\", 22)(2, \"mat-label\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function SurveyCreateComponent_div_13_div_20_div_1_Template_button_click_5_listener() {\n      const j_r6 = i0.ɵɵrestoreView(_r5).index;\n      const i_r2 = i0.ɵɵnextContext(2).index;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.removeOption(i_r2, j_r6));\n    });\n    i0.ɵɵelementStart(6, \"mat-icon\");\n    i0.ɵɵtext(7, \"remove_circle\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const j_r6 = ctx.index;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Opci\\u00F3n \", j_r6 + 1, \"\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"formControlName\", j_r6);\n  }\n}\nfunction SurveyCreateComponent_div_13_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, SurveyCreateComponent_div_13_div_20_div_1_Template, 8, 2, \"div\", 20);\n    i0.ɵɵelementStart(2, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function SurveyCreateComponent_div_13_div_20_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const i_r2 = i0.ɵɵnextContext().index;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.addOption(i_r2));\n    });\n    i0.ɵɵtext(3, \"A\\u00F1adir opci\\u00F3n\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const i_r2 = i0.ɵɵnextContext().index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.getOptions(i_r2).controls);\n  }\n}\nfunction SurveyCreateComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"mat-card\", 11)(2, \"div\", 12)(3, \"h3\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function SurveyCreateComponent_div_13_Template_button_click_5_listener() {\n      const i_r2 = i0.ɵɵrestoreView(_r1).index;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.removeQuestion(i_r2));\n    });\n    i0.ɵɵelementStart(6, \"mat-icon\");\n    i0.ɵɵtext(7, \"delete\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(8, \"mat-form-field\", 2)(9, \"mat-label\");\n    i0.ɵɵtext(10, \"Texto de la pregunta\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"mat-form-field\", 2)(13, \"mat-label\");\n    i0.ɵɵtext(14, \"Tipo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"mat-select\", 15);\n    i0.ɵɵlistener(\"selectionChange\", function SurveyCreateComponent_div_13_Template_mat_select_selectionChange_15_listener() {\n      const i_r2 = i0.ɵɵrestoreView(_r1).index;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onTypeChange(i_r2));\n    });\n    i0.ɵɵelementStart(16, \"mat-option\", 16);\n    i0.ɵɵtext(17, \"Texto libre\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"mat-option\", 17);\n    i0.ɵɵtext(19, \"Opci\\u00F3n \\u00FAnica\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(20, SurveyCreateComponent_div_13_div_20_Template, 4, 1, \"div\", 18);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    let tmp_5_0;\n    const question_r7 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    i0.ɵɵproperty(\"formGroupName\", i_r2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"Pregunta \", i_r2 + 1, \"\");\n    i0.ɵɵadvance(16);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = question_r7.get(\"type\")) == null ? null : tmp_5_0.value) === \"radio\");\n  }\n}\nexport let SurveyCreateComponent = /*#__PURE__*/(() => {\n  class SurveyCreateComponent {\n    constructor(fb, surveyService, router, snackBar) {\n      this.fb = fb;\n      this.surveyService = surveyService;\n      this.router = router;\n      this.snackBar = snackBar;\n    }\n    ngOnInit() {\n      this.surveyForm = this.fb.group({\n        title: ['', Validators.required],\n        description: [''],\n        questions: this.fb.array([])\n      });\n      this.addQuestion();\n    }\n    /**\n     * Getter for the questions FormArray\n     */\n    get questions() {\n      return this.surveyForm.get('questions');\n    }\n    /**\n     * Create a new question form group. The default type is text.\n     */\n    createQuestion() {\n      return this.fb.group({\n        text: ['', Validators.required],\n        type: ['text', Validators.required],\n        options: this.fb.array([])\n      });\n    }\n    /**\n     * Add a new question to the form.\n     */\n    addQuestion() {\n      this.questions.push(this.createQuestion());\n    }\n    /**\n     * Remove a question at the given index.\n     */\n    removeQuestion(index) {\n      if (this.questions.length > 1) {\n        this.questions.removeAt(index);\n      }\n    }\n    /**\n     * Getter for the options FormArray of a specific question.\n     */\n    getOptions(questionIndex) {\n      return this.questions.at(questionIndex).get('options');\n    }\n    /**\n     * Add an option to a multiple choice question.\n     */\n    addOption(questionIndex) {\n      this.getOptions(questionIndex).push(this.fb.control('', Validators.required));\n    }\n    /**\n     * Remove an option from a multiple choice question.\n     */\n    removeOption(questionIndex, optionIndex) {\n      const opts = this.getOptions(questionIndex);\n      if (opts.length > 1) {\n        opts.removeAt(optionIndex);\n      }\n    }\n    /**\n     * Called when the question type changes. Clears options if not a radio type.\n     */\n    onTypeChange(questionIndex) {\n      const question = this.questions.at(questionIndex);\n      const type = question.get('type')?.value;\n      const options = question.get('options');\n      if (type === 'radio') {\n        if (options.length === 0) {\n          // initialise with two empty options\n          options.push(this.fb.control('', Validators.required));\n          options.push(this.fb.control('', Validators.required));\n        }\n      } else {\n        // Clear options for text questions\n        while (options.length !== 0) {\n          options.removeAt(0);\n        }\n      }\n    }\n    /**\n     * Submit handler. Transforms the reactive form into the Survey format and calls\n     * the survey service to persist it.\n     */\n    onSubmit() {\n      if (this.surveyForm.invalid) {\n        this.surveyForm.markAllAsTouched();\n        return;\n      }\n      const rawSurvey = this.surveyForm.value;\n      this.surveyService.addSurvey({\n        title: rawSurvey.title,\n        description: rawSurvey.description,\n        questions: rawSurvey.questions.map(q => ({\n          text: q.text,\n          type: q.type,\n          options: q.type === 'radio' ? q.options : undefined\n        }))\n      });\n      this.snackBar.open('Encuesta creada', 'Cerrar', {\n        duration: 3000\n      });\n      this.router.navigate(['/surveys']);\n    }\n    static {\n      this.ɵfac = function SurveyCreateComponent_Factory(t) {\n        return new (t || SurveyCreateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.SurveyService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.MatSnackBar));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: SurveyCreateComponent,\n        selectors: [[\"app-survey-create\"]],\n        decls: 19,\n        vars: 2,\n        consts: [[1, \"survey-card\"], [3, \"ngSubmit\", \"formGroup\"], [\"appearance\", \"outline\", 1, \"full-width\"], [\"matInput\", \"\", \"formControlName\", \"title\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"description\", \"rows\", \"2\"], [\"formArrayName\", \"questions\"], [\"class\", \"question-group\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"mat-button\", \"\", \"type\", \"button\", \"color\", \"accent\", 3, \"click\"], [1, \"actions\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"], [1, \"question-group\", 3, \"formGroupName\"], [1, \"question-card\"], [1, \"question-header\"], [\"mat-icon-button\", \"\", \"color\", \"warn\", \"type\", \"button\", \"aria-label\", \"Eliminar pregunta\", 3, \"click\"], [\"matInput\", \"\", \"formControlName\", \"text\", \"required\", \"\"], [\"formControlName\", \"type\", 3, \"selectionChange\"], [\"value\", \"text\"], [\"value\", \"radio\"], [\"formArrayName\", \"options\", \"class\", \"options-container\", 4, \"ngIf\"], [\"formArrayName\", \"options\", 1, \"options-container\"], [\"class\", \"option-row\", 4, \"ngFor\", \"ngForOf\"], [1, \"option-row\"], [\"appearance\", \"outline\", 1, \"option-field\"], [\"matInput\", \"\", \"required\", \"\", 3, \"formControlName\"], [\"mat-icon-button\", \"\", \"color\", \"warn\", \"type\", \"button\", \"aria-label\", \"Eliminar opci\\u00F3n\", 3, \"click\"]],\n        template: function SurveyCreateComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"mat-card\", 0)(1, \"h2\");\n            i0.ɵɵtext(2, \"Crear encuesta\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"form\", 1);\n            i0.ɵɵlistener(\"ngSubmit\", function SurveyCreateComponent_Template_form_ngSubmit_3_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(4, \"mat-form-field\", 2)(5, \"mat-label\");\n            i0.ɵɵtext(6, \"T\\u00EDtulo\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(7, \"input\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"mat-form-field\", 2)(9, \"mat-label\");\n            i0.ɵɵtext(10, \"Descripci\\u00F3n\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(11, \"textarea\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(12, \"div\", 5);\n            i0.ɵɵtemplate(13, SurveyCreateComponent_div_13_Template, 21, 3, \"div\", 6);\n            i0.ɵɵelementStart(14, \"button\", 7);\n            i0.ɵɵlistener(\"click\", function SurveyCreateComponent_Template_button_click_14_listener() {\n              return ctx.addQuestion();\n            });\n            i0.ɵɵtext(15, \" A\\u00F1adir pregunta \");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(16, \"div\", 8)(17, \"button\", 9);\n            i0.ɵɵtext(18, \"Guardar encuesta\");\n            i0.ɵɵelementEnd()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"formGroup\", ctx.surveyForm);\n            i0.ɵɵadvance(10);\n            i0.ɵɵproperty(\"ngForOf\", ctx.questions.controls);\n          }\n        },\n        dependencies: [i5.NgForOf, i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName, i6.MatButton, i6.MatIconButton, i7.MatInput, i8.MatFormField, i8.MatLabel, i9.MatCard, i10.MatIcon, i11.MatSelect, i12.MatOption],\n        styles: [\".survey-card[_ngcontent-%COMP%]{margin:1rem auto;max-width:800px;padding:1rem}.question-card[_ngcontent-%COMP%]{margin-bottom:1rem;padding:1rem;border-left:4px solid #3f51b5}.question-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center}.options-container[_ngcontent-%COMP%]{margin-left:1rem}.option-row[_ngcontent-%COMP%]{display:flex;align-items:center;gap:.5rem;margin-bottom:.5rem}.actions[_ngcontent-%COMP%]{margin-top:1rem;text-align:right}\"]\n      });\n    }\n  }\n  return SurveyCreateComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}